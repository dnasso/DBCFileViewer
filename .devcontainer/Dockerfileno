# Use Ubuntu 24.04 as the base image for better Qt6 support
FROM ubuntu:24.04 AS base
    
# Avoid interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Chicago

# Set display environment for GUI applications
ENV DISPLAY=:0
ENV QT_QPA_PLATFORM=xcb

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Build tools
    build-essential \
    locales \
    cmake \
    pkg-config \
    ninja-build \
    # Qt6 core packages
    qt6-base-dev \
    qt6-declarative-dev \
    qt6-tools-dev \
    qt6-tools-dev-tools \
    libqt6network6 \
    libqt6quick6 \
    libqt6core6 \
    libqt6gui6 \
    libqt6widgets6 \
    # Qt6 additional modules for QML
    qml6-module-qtquick-dialogs \
    qml6-module-qtqml-workerscript \
    qml6-module-qtquick-controls \
    qml6-module-qtquick-layouts \
    qml6-module-qtquick-window \
    qml6-module-qtquick \
    qml6-module-qtquick-templates \
    qml6-module-qt-labs-folderlistmodel \
    # OpenGL development packages (required for Qt6)
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    libegl1-mesa-dev \
    libgles2-mesa-dev \
    libglx-dev \
    libopengl-dev \
    # XKB library for keyboard support
    libxkbcommon-dev \
    libxkbcommon-x11-dev \
    # X11 and graphics libraries for Qt GUI
    libx11-6 \
    libxext6 \
    libxrender1 \
    libxtst6 \
    libxi6 \
    libgl1 \
    libglib2.0-0 \
    libfontconfig1 \
    libfreetype6 \
    libxss1 \
    libxrandr2 \
    libasound2t64 \
    libpangocairo-1.0-0 \
    libatk1.0-0 \
    libcairo-gobject2 \
    libgtk-3-0 \
    libgdk-pixbuf2.0-0 \
    # Network tools for debugging
    net-tools \
    iputils-ping \
    # Clean up and set locale
    && locale-gen en_US.UTF-8 \
    && rm -rf /var/lib/apt/lists/*

ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8

# Try to install additional QML modules (these may not be available in all Ubuntu versions)
RUN apt-get update && \
    (apt-get install -y \
        qml6-module-qtqml-models \
        || echo "Some additional QML modules not available, continuing...") && \
    rm -rf /var/lib/apt/lists/*

# Create a non-root user for security
RUN useradd -m -s /bin/bash dbcuser && \
    usermod -aG audio,video dbcuser

# Set working directory
WORKDIR /app

# Copy project files
COPY --chown=dbcuser:dbcuser . .

# Ensure helper scripts are executable
RUN chmod +x /app/start_app.sh

# Create build directory
RUN rm -rf build_docker && \
    mkdir -p build_docker && \
    chown dbcuser:dbcuser build_docker

# Switch to non-root user
USER dbcuser

# Build the application
RUN cd build_docker && \
    cmake .. \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_PREFIX_PATH=/usr/lib/x86_64-linux-gnu/cmake/Qt6 \
        -G Ninja && \
    ninja

# Expose the port for TCP server functionality
#EXPOSE 12345

# Set the entrypoint
ENTRYPOINT ["/app/start_app.sh"]

# Default command
CMD []
